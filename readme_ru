HVKAPI 1.1 README FILE
================================================================================
HVKAPI - модуль для работы с API вконтакта, для языков Perl и PHP, не имеющих
поддержки визуальных компонентов. 

Начиная с версии 0.3, модуль предоставляет интерфейс для обычных HTTP-запросов к
контакту через объект LWP::UserAgent, наряду с запросами через API. Обработку 
капчи этот интерфейс поддерживает (метод postWithCaptcha), но имейте в виду, что
определение капчи (как и, например, функция логина) могут рушиться всякий раз,
когда контакт изменит формат капчи или сам логин. Это - плата за избавление от 
визуальных компонентов. 

ЗАМЕЧАНИЯ К ТЕКУЩЕЙ ВЕРСИИ
------------------------------------------------------------------------------
В версии 1.0 модуль был полностью переписан под механизм OAuth, сравнительно 
недавно внедрённый в систему, что в теории должно дать прирост к стабильности
и не столь мощное пожирание траффика.


ТРЕБОВАНИЯ
-------------------------------------------------------------------------------
Во-первых, LWP. Также может потребоваться модуль LWP::Protocol::https, ибо 
вкалтакт по-другому не понимает. Убедитесь, что соответствующий модуль у вас
установлен.

Для поддержки IPv6 вам понадобятся модули Net::INET6Glue::INET_is_INET6 и 
Net::SSLGlue::LWP. Если ipv6 не требуется, закомментируйте соответствующие
строки. 


ОПИСАНИЕ МЕТОДОВ
--------------------------------------------------------------------------------

~~~~~~~~~~~~~~~~~~~~~~~~~
new (captchaCallback, appid, useragent)
~~~~~~~~~~~~~~~~~~~~~~~~~
Конструктор класса. В качестве параметров принимает:
 - appid (int)- ид десктопного приложения, через которое будут идти запросы
 - UserAgent (string)- идентификатор браузера, без комментариев.
 - captchaCallback (pointer) - callback-функция для обработки возможной капчи.

~~~~~~~~~~~~~~~~~~~~~~~~~
login (email, pass, mphone)
~~~~~~~~~~~~~~~~~~~~~~~~~
Собственно логин. Параметры очевидны; mphone - это четыре последних цифры 
телефона, на который зареган аккаунт (на случай проверки безопасности).
Возвращаемый результат - хеш (в Perl) или ассоциативный массив (в PHP) с 
ключами:
	errcode - код ошибки.
	errdesc - описание ошибки. 
В случае успешного логина errcode = 0. Возможные коды ошибок:
	101  - некорректный логпасс.
	103  - "проверка безопасности" (или неправильное 
		значение mphone)
	666  - вылезла капча (и вы не указали callback)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
setCallback (callbackFunc)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Устанавливает (или заменяет) callback-функцию для капчи. В PHP на вход ваша 
callback-функция получает ассоциативный массив из следующих полей:
	difficult - т.н. сложность капчи (поле [b]s[/b] в адресе)
	captcha_sid - sid капчи. 
	captcha_url - полный линк на картинку с капчей, например, 
			http://vkontakte.ru/captcha.php?sid=1234567890&s=0
В Perl - ССЫЛКУ на хеш, поля те же. Вернуть она должна строку ответа. 

~~~~~~~~~~~~~~~~~~~~~~~~~
request (method, params)
~~~~~~~~~~~~~~~~~~~~~~~~~
Запрос к API вконтакта.
 - method (string) - название метода API.
 - params - хеш (в Perl) или ассоциативный массив (в PHP) с полями запроса. 
Возвращает также хеш либо ассоциативный массив. Подробнее о входных параметрах 
и кодах ошибок см. документацию на userapi.com.

~~~~~~~~~~~~~~~~~~~~~~~~~
interface()
~~~~~~~~~~~~~~~~~~~~~~~~~
Объект LWP::UserAgent для HTTP-запросов. Имейте в виду, что если вы используете
restoreSession, а не логинитесь в контакт заново, то никаких кук в браузере
не будет, т.е. совершать обычные запросы к контакту не получится. 

~~~~~~~~~~~~~~~~~~~~~~~~~
postWithCaptcha()
~~~~~~~~~~~~~~~~~~~~~~~~~
Post через LWP::UserAgent, только с обработкой капчи. 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
restoreSession(access_token, mid)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Восстановление сессии (а конкретно - переменных mid и access_token). 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
getSessionVars()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Возвращает хеш со значениями переменных mid и access_code. В связке с 
restoreSession может быть использована для сохранения/восстановления кук.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
get(), post()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Методы являются абстрактными и просто вызывают соответствующие методы объекта LWP::UserAgent.


КОНСТАНТЫ И ЗНАЧЕНИЯ ПО УМОЛЧАНИЮ
--------------------------------------------------------------------------------
Расположены в начале модуля с классом и прокомментированы. Можно изменить ид 
дефолтного приложения, юзерагент, адрес для API-запросов и вообще поломать 
модуль и долго на это жаловаться.

